{"version":3,"file":"static/js/298.5e9bbcba.chunk.js","mappings":"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","sources":["components/hook-form/RHFTextField.js","components/search/Search.js","components/search/SearchIconWrapper.js","components/search/StyledInputBase.js","components/GroupElement.js","sections/main/CreateGroup.js","components/GroupConversation/Header.js","components/GroupConversation/Footer.js","components/GroupConversation/MsgTypes.js","components/GroupConversation/Message.js","components/GroupConversation/index.js","pages/dashboard/Group.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          value={\n            typeof field.value === \"number\" && field.value === 0\n              ? \"\"\n              : field.value\n          }\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import { styled,alpha } from \"@mui/material\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: 20,\n  backgroundColor: alpha(theme.palette.background.paper, 1),\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\n\nexport default Search;","import { styled } from \"@mui/material\";\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport default SearchIconWrapper;\n","import { styled, InputBase } from \"@mui/material\";\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    width: \"100%\",\n  },\n}));\nexport default StyledInputBase;\n","import { Box, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectGroupConversation } from \"../redux/slices/app\";\r\n\r\nconst GroupElement = ({ id, title, time, msg }) => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const backgroundColor =\r\n    theme.palette.mode === \"light\" ? \"#fff\" : theme.palette.background.paper;\r\n\r\n  return (\r\n    <Box\r\n      onClick={() => {\r\n        dispatch(selectGroupConversation({ room_id: id }));\r\n      }}\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n        <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\r\n          {time}\r\n        </Typography>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GroupElement;\r\n","import {\n  Button,\n  Chip,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slide,\n  Stack,\n} from \"@mui/material\";\n\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport RHFTextField from \"../../components/hook-form/RHFTextField\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../../socket\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst CreateGroupForm = ({ handleClose, socket }) => {\n  const NewGroupSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    friends: Yup.array().min(2, \"Must have at least 2 members\"),\n  });\n\n  const defaultValues = {\n    title: \"\",\n    friends: [],\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(NewGroupSchema),\n    defaultValues,\n  });\n\n\n  const { friends } = useSelector((state) => state.app);\n\n  const handleCreateGroup = () => {\n    // Call the onSubmit function directly\n    onSubmit(methods.getValues())();\n    handleClose();\n  };\n\n  const onSubmit = (data) => () => {\n    // Here you can perform any additional logic you need with the form data\n    console.log(\"Form submitted with data:\", data);\n\n    // Emit socket event to start a new group conversation with selected friends\n    socket.emit(\"start_group_conversation\", data);\n\n    // Log data for verification\n    console.log(\"Form Data:\", data);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <Stack spacing={3}>\n        <RHFTextField name=\"title\" label=\"Group Title\" />\n\n        {/* Dropdown menu to select friends */}\n        <FormControl variant=\"outlined\" fullWidth>\n          <InputLabel id=\"friends-label\">Friends List</InputLabel>\n          <Select\n            name=\"friends\"\n            labelId=\"friends-label\"\n            label=\"Friends\"\n            multiple\n            value={methods.watch(\"friends\") || []}\n            onChange={(e) => {\n              methods.setValue(\"friends\", e.target.value);\n            }}\n            renderValue={(selected) => {\n              return (\n                <div>\n                  {selected.map((value) => (\n                    <Chip\n                      sx={{ marginRight: \"5px\" }}\n                      key={value}\n                      label={value}\n                    />\n                  ))}\n                </div>\n              );\n            }}\n            error={!!methods.formState.errors.friends}\n            helperText={\n              methods.formState.errors.friends &&\n              methods.formState.errors.friends.message\n            }\n          >\n            {friends.map((friend, idx) => (\n              <MenuItem\n                key={idx}\n                value={friend.firstName + \" \" + friend.lastName}\n              >\n                {friend.firstName} {friend.lastName}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Stack\n          spacing={2}\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"end\"\n        >\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button type=\"button\" variant=\"contained\" onClick={handleCreateGroup}>\n            Create\n          </Button>\n        </Stack>\n      </Stack>\n    </FormProvider>\n  );\n};\n\nconst CreateGroup = ({ open, handleClose }) => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xs\"\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={{ p: 4 }}\n    >\n      <DialogTitle sx={{ mb: 3 }}>Create New Group</DialogTitle>\n\n      <DialogContent sx={{ mt: 5 }}>\n        {/* Create Group Form */}\n        {<CreateGroupForm handleClose={handleClose} socket={socket} />}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CreateGroup;\n","import {\n  Avatar,\n  Box,\n  Stack,\n  Typography,\n  IconButton,\n  Divider,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\nimport StyledBadge from \"../StyledBadge\";\nimport { useSelector } from \"react-redux\";\n\n\nconst Header = ({ toggleContact, toggleRoomId }) => {\n  const theme = useTheme();\n  const { current_conversations } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n\n  console.log(\"group convo\", current_conversations);\n  return (\n    <Box\n      p={2}\n      sx={{\n        height: 100,\n        width: \"100%\",\n        backgroundColor:\n          theme.palette.mode === \"light\"\n            ? \"#f8faff\"\n            : theme.palette.background.default,\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\n      }}\n    >\n      <Stack\n        alignItems={\"center\"}\n        direction={\"row\"}\n        justifyContent={\"space-between\"}\n        sx={{ width: \"100%\", height: \"100%\" }}\n      >\n        <Stack direction={\"row\"} spacing={2}>\n          <Box onClick={toggleContact}>\n            <StyledBadge\n              overlap=\"circular\"\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n              variant=\"dot\"\n            >\n              <Avatar alt={current_conversations?.title} />\n            </StyledBadge>\n          </Box>\n          <Stack spacing={0.2}>\n            <Typography variant=\"subtitle2\">\n              {current_conversations?.title}\n            </Typography>\n            <Typography variant=\"caption\">Online</Typography>\n          </Stack>\n        </Stack>\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\n          <IconButton>\n            <VideoCamera />\n          </IconButton>\n          <IconButton>\n            <Phone />\n          </IconButton>\n          <IconButton>\n            <MagnifyingGlass />\n          </IconButton>\n          <Divider orientation=\"vertical\" flexItem />\n          <IconButton>\n            <CaretDown onClick={() => toggleRoomId(true)} />\n          </IconButton>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Box,\n  Fab,\n  IconButton,\n  InputAdornment,\n  Stack,\n  TextField,\n  Tooltip,\n  styled,\n  useTheme,\n} from \"@mui/material\";\nimport {\n  Camera,\n  File,\n  Image,\n  LinkSimple,\n  PaperPlaneTilt,\n  Smiley,\n  Sticker,\n  User,\n} from \"phosphor-react\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { socket } from \"../../socket\";\nimport {\n  FetchCurrentMessages,\n  SetCurrentConversation,\n} from \"../../redux/slices/conversation\";\n\nconst StyledInput = styled(TextField)(({ theme }) => ({\n  \"& .MuiInputBase-input\": {\n    paddingBottom: \"12px\",\n    paddingTop: \"12px\",\n  },\n}));\n\nconst Actions = [\n  {\n    color: \"#4da5fe\",\n    icon: <Image size={24} />,\n    y: 102,\n    title: \"Photo/Video\",\n  },\n  {\n    color: \"#1b8cfe\",\n    icon: <Sticker size={24} />,\n    y: 172,\n    title: \"Stickers\",\n  },\n  {\n    color: \"#0172e4\",\n    icon: <Camera size={24} />,\n    y: 242,\n    title: \"Image\",\n  },\n  {\n    color: \"#0159b2\",\n    icon: <File size={24} />,\n    y: 312,\n    title: \"Document\",\n  },\n  {\n    color: \"#013f7f\",\n    icon: <User size={24} />,\n    y: 382,\n    title: \"Contact\",\n  },\n];\n\nconst ChatInput = ({\n  openPicker,\n  setOpenPicker,\n  setValue,\n  value,\n  inputRef,\n}) => {\n  const [openActions, setOpenActions] = React.useState(false);\n\n  return (\n    <StyledInput\n      inputRef={inputRef}\n      value={value}\n      onChange={(event) => {\n        setValue(event.target.value);\n      }}\n      fullWidth\n      placeholder=\"Write a message...\"\n      variant=\"filled\"\n      InputProps={{\n        disableUnderline: true,\n        startAdornment: (\n          <Stack sx={{ width: \"max-content\" }}>\n            <Stack\n              sx={{\n                position: \"relative\",\n                display: openActions ? \"inline-block\" : \"none\",\n              }}\n            >\n              {Actions.map((el, i) => (\n                <Tooltip key={i} placement=\"right\" title={el.title}>\n                  <Fab\n                    onClick={() => {\n                      setOpenActions(!openActions);\n                    }}\n                    sx={{\n                      position: \"absolute\",\n                      top: -el.y,\n                      backgroundColor: el.color,\n                    }}\n                    aria-label=\"add\"\n                  >\n                    {el.icon}\n                  </Fab>\n                </Tooltip>\n              ))}\n            </Stack>\n\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => {\n                  setOpenActions((prev) => !prev);\n                }}\n              >\n                <LinkSimple />\n              </IconButton>\n            </InputAdornment>\n          </Stack>\n        ),\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              onClick={() => {\n                setOpenPicker((prev) => !prev);\n              }}\n            >\n              <Smiley />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nfunction containsUrl(text) {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  return urlRegex.test(text);\n}\nconst Footer = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [openPicker, setOpenPicker] = React.useState(false);\n  const user_id = window.localStorage.getItem(\"user_id\");\n\n  const { current_conversation } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n  const [value, setValue] = useState(\"\");\n  const inputRef = useRef(null);\n  const { room_id } = useSelector((state) => state.app);\n\n  function handleEmojiClick(emoji) {\n    const input = inputRef.current;\n\n    if (input) {\n      const selectionStart = input.selectionStart;\n      const selectionEnd = input.selectionEnd;\n\n      setValue(\n        value.substring(0, selectionStart) +\n          emoji +\n          value.substring(selectionEnd)\n      );\n\n      // Move the cursor to the end of the inserted emoji\n      input.selectionStart = input.selectionEnd = selectionStart + 1;\n    }\n  }\n  const [test, setTest] = useState(false);\n  const { group_conversations } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n  useEffect(() => {\n    const current = group_conversations.find((el) => el?.id === room_id);\n\n    socket.emit(\n      \"get_messages\",\n      { group_conversations_id: current?.id },\n      (data) => {\n        dispatch(FetchCurrentMessages({ messages: data }));\n\n        dispatch(SetCurrentConversation(current));\n      }\n    );\n  }, [test, dispatch, group_conversations, room_id]);\n  return (\n    <Box\n      p={2}\n      sx={{\n        width: \"100%\",\n        backgroundColor:\n          theme.palette.mode === \"light\"\n            ? \"#f8faff\"\n            : theme.palette.background.default,\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\n      }}\n    >\n      <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\n        <Stack sx={{ width: \"100%\" }}>\n          {/*Chat Input */}\n          <Box\n            sx={{\n              display: openPicker ? \"inline\" : \"none\",\n              zIndex: 10,\n              position: \"fixed\",\n              bottom: 81,\n              right: 100,\n            }}\n          >\n            <Picker\n              theme={theme.palette.mode}\n              data={data}\n              onEmojiSelect={(emoji) => {\n                handleEmojiClick(emoji.native);\n              }}\n            />\n          </Box>\n\n          <ChatInput\n            inputRef={inputRef}\n            value={value}\n            setValue={setValue}\n            openPicker={openPicker}\n            setOpenPicker={setOpenPicker}\n          />\n        </Stack>\n\n        <Box\n          sx={{\n            height: 48,\n            width: 48,\n            backgroundColor: theme.palette.primary.main,\n            borderRadius: 1.5,\n          }}\n        >\n          <Stack\n            sx={{ height: \"100%\", width: \"100%\" }}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <IconButton\n              onClick={() => {\n                socket.emit(\n                  \"text_message\",\n                  {\n                    message: value,\n                    conversation_id: room_id,\n                    from: user_id,\n                    to: current_conversation.user_id,\n                    type: containsUrl(value) ? \"Link\" : \"Text\",\n                  },\n                  (s) => setTest(!test)\n                );\n              }}\n            >\n              <PaperPlaneTilt color=\"white\" />\n            </IconButton>\n          </Stack>\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import {\n  Box,\n  Divider,\n  IconButton,\n  Link,\n  Menu,\n  MenuItem,\n  Stack,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Message_options } from \"../../data\";\nimport { socket } from \"../../socket\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FetchCurrentMessages,\n  SetCurrentConversation,\n} from \"../../redux/slices/conversation\";\n\nconst DocMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        p={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? theme.palette.background.default\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            direction=\"row\"\n            spacing={3}\n            alignItems=\"center\"\n            sx={{\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: 1,\n            }}\n          >\n            <Image size={48} />\n            <Typography variant=\"caption\">Abstract.png</Typography>\n            <IconButton>\n              <DownloadSimple />\n            </IconButton>\n          </Stack>\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"#fff\"}\n          >\n            {el.message}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\n\nconst LinkMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        p={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? theme.palette.background.default\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            spacing={3}\n            direction=\"column\"\n            sx={{\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: 1,\n            }}\n          >\n            <img\n              src={el.preview}\n              alt={el.message}\n              style={{ maxHeight: 210, borderRadius: \"10px\" }}\n            />\n            <Stack spacing={2}>\n              <Typography\n                variant=\"subtitle2\"\n                color={el.incoming ? theme.palette.text : \"white\"}\n              >\n                Creating chat app\n              </Typography>\n              <Typography\n                variant=\"subtitle2\"\n                color={theme.palette.primary.main}\n                component={Link}\n                to=\"//https://www.youtube.com\"\n              >\n                www.youtube.com\n              </Typography>\n            </Stack>\n            <Typography\n              variant=\"body2\"\n              color={el.incoming ? theme.palette.text : \"white\"}\n            >\n              {el.message}\n            </Typography>\n          </Stack>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\n\nconst ReplyMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        p={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? theme.palette.background.default\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            direction=\"column\"\n            spacing={3}\n            alignItems={3}\n            sx={{\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: 1,\n            }}\n          >\n            <Typography variant=\"body2\" color={theme.palette.text}>\n              {el.message}\n            </Typography>\n          </Stack>\n          <Typography\n            variant=\"caption\"\n            color={el.incoming ? theme.palette.text : \"white\"}\n          >\n            {el.reply}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\n\nconst MediaMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        p={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? theme.palette.background.default\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={1}>\n          <img\n            src={el.img}\n            alt={el.message}\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\n          />\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"white\"}\n          >\n            {el.message}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\n\nconst TextMsg = ({ id, el, menu }) => {\n  const theme = useTheme();\n\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        p={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? theme.palette.background.default\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Typography\n          variant=\"body2\"\n          color={el.incoming ? theme.palette.text : \"white\"}\n        >\n          {el.message}\n        </Typography>\n      </Box>\n      {/* dots */}\n      {menu && <MessageOption messageId={el.id} />}\n    </Stack>\n  );\n};\n\nconst Timeline = ({ el }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent={\"space-between\"}>\n      <Divider width=\"46%\" />\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\n        {el.text}\n      </Typography>\n      <Divider width=\"46%\" />\n    </Stack>\n  );\n};\n\nconst MessageOption = ({ messageId }) => {\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [setMessageDeleted] = useState(false);\n  const [test, setTest] = useState(false);\n  const { conversations } = useSelector(\n    (state) => state.conversation.direct_chat\n  );\n  const { room_id } = useSelector((state) => state.app);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  useEffect(() => {\n    const current = conversations.find((el) => el?.id === room_id);\n\n    socket.emit(\"get_messages\", { conversation_id: current?.id }, (data) => {\n      dispatch(FetchCurrentMessages({ messages: data }));\n\n      dispatch(SetCurrentConversation(current));\n    });\n  }, [test, dispatch, conversations, room_id]);\n\n  const handleDeleteMessage = () => {\n    socket.emit(\"delete_message\", messageId, (response) => {\n      if (response && response.success) {\n        console.log(`Message with ID ${messageId} has been deleted`);\n        setMessageDeleted(true);\n      } else {\n        console.error(\n          `Error deleting message with ID ${messageId}:`,\n          response && response.error\n        );\n        // Handle error, show an error message, etc.\n      }\n    });\n\n    handleClose(); // Close the menu after emitting\n  };\n\n  return (\n    <>\n      <DotsThreeVertical\n        size={20}\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <Stack spacing={1} px={1}>\n          {Message_options.map((option, index) => (\n            <MenuItem key={index} onClick={handleClose}>\n              {option.title === \"Delete Message\" ? (\n                <Typography\n                  sx={{ cursor: \"pointer\", color: \"#ff0000\" }}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteMessage();\n                    setTest(!test);\n                  }}\n                >\n                  {option.title}\n                </Typography>\n              ) : (\n                <Typography sx={{ cursor: \"pointer\", color: \"#fff\" }}>\n                  {option.title}\n                </Typography>\n              )}\n            </MenuItem>\n          ))}\n        </Stack>\n      </Menu>\n    </>\n  );\n};\n\nexport { Timeline, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg };\n","import { Box, Stack } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport {\n  DocMsg,\n  LinkMsg,\n  MediaMsg,\n  ReplyMsg,\n  TextMsg,\n  Timeline,\n} from \"./MsgTypes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FetchGroupMessages,\n  SetCurrentGroupConversation,\n} from \"../../redux/slices/conversation\";\nimport { socket } from \"../../socket\";\n\nconst Message = (menu) => {\n  const dispatch = useDispatch();\n\n  const { group_conversations } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n  const { room_id } = useSelector((state) => state.app);\n\n  useEffect(() => {\n    const current = group_conversations.find((el) => el?.id === room_id);\n\n    socket.emit(\n      \"get_group_conversations\",\n      { group_conversations_id: current?.id },\n      (data) => {\n        dispatch(FetchGroupMessages({ messages: data }));\n      }\n    );\n\n    dispatch(SetCurrentGroupConversation(current));\n  }, [dispatch, group_conversations, room_id]);\n  return (\n    <>\n      <Box p={3}>\n        <Stack spacing={3}>\n          {group_conversations.map((el, i) => {\n            switch (el.type) {\n              case \"divider\":\n                // Timeline\n                return <Timeline key={i} el={el} />;\n              case \"msg\":\n                switch (el.subtype) {\n                  case \"img\":\n                    // img msg\n                    return <MediaMsg key={i} el={el} menu={menu} />;\n                  case \"doc\":\n                    // doc msg\n                    return <DocMsg key={i} el={el} menu={menu} />;\n                  case \"link\":\n                    // link msg\n                    return <LinkMsg key={i} el={el} menu={menu} />;\n                  case \"reply\":\n                    // reply msg\n                    return <ReplyMsg key={i} el={el} menu={menu} />;\n\n                  default:\n                    // text msg\n                    return <TextMsg key={i} el={el} menu={menu} />;\n                }\n\n              default:\n                return <></>;\n            }\n          })}\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Box, Stack, useTheme } from \"@mui/material\";\nimport Message from \"./Message\";\nimport { useSelector } from \"react-redux\";\n\nconst GroupConversation = ({ toggleContact, toggleRoomId }) => {\n  const theme = useTheme();\n  const { current_messages } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n  const messageListRef = useRef(null);\n\n  useEffect(() => {\n    // Scroll to the bottom of the message list when new messages are added\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [current_messages]);\n\n  return (\n    <Stack\n      sx={{\n        height: \"100%\",\n        width: \"100%\",\n        backgroundColor:\n          theme.palette.mode === \"light\"\n            ? \"#f0f4fa\"\n            : theme.palette.background.paper,\n      }}\n    >\n      {/*Chat header*/}\n      <Header toggleContact={toggleContact} toggleRoomId={toggleRoomId} />\n      {/*msg*/}\n      <Box\n        ref={messageListRef}\n        width={\"100%\"}\n        sx={{\n          flexGrow: 1,\n          height: \"100%\",\n          overflow: \"scroll\",\n          backgroundColor:\n            theme.palette.mode === \"light\"\n              ? \"#F0F4FA\"\n              : theme.palette.background,\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n        }}\n      >\n        <Message menu={true} />\n      </Box>\n      {/*Chat footer*/}\n      <Footer />\n    </Stack>\n  );\n};\n\nexport default GroupConversation;\n","import {\n  Box,\n  IconButton,\n  Stack,\n  Typography,\n  useTheme,\n  Link,\n  Divider,\n} from \"@mui/material\";\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../components/search\";\nimport GroupElement from \"../../components/GroupElement\";\nimport CreateGroup from \"../../sections/main/CreateGroup\";\nimport NoChat from \"../../assets/Illustration/NoChat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FetchGroupConversations } from \"../../redux/slices/conversation\";\nimport { socket } from \"../../socket\";\nimport GroupConversation from \"../../components/GroupConversation\";\nimport Contact from \"../../components/Contact\";\nimport { SetRoomId } from \"../../redux/slices/app\";\nimport BottomNav from \"../../layouts/dashboard/BottomNav\";\nimport useResponsive from \"../../hooks/useResponsive\";\nconst user_id = localStorage.getItem(\"user_id\");\n\nconst Group = () => {\n  const isDesktop = useResponsive(\"up\", \"md\");\n\n  const { room_id, chat_type } = useSelector((state) => state.app);\n  const [showContact, setShowContact] = useState(false);\n  const [sidebarType] = useState(\"CONTACT\");\n\n  const toggleContact = () => {\n    setShowContact(!showContact);\n  };\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const { group_conversations } = useSelector(\n    (state) => state.conversation.group_chat\n  );\n  console.log(\"group convo\", group_conversations);\n\n  useEffect(() => {\n    socket.emit(\"get_group_conversations\", { user_id }, (data) => {\n      dispatch(FetchGroupConversations({ group_conversations: data }));\n    });\n  }, [dispatch]);\n\n  const toggleRoomId = (makeRoomIdNull = false) => {\n    if (makeRoomIdNull) {\n      dispatch(SetRoomId({ room_id: null }));\n    }\n  };\n  return (\n    <>\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n        {/* Left */}\n        <Box\n          sx={{\n            overflowY: \"scroll\",\n            height: \"100vh\",\n            width: 320,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background.default,\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n        >\n          {!isDesktop && (\n            // SideBar\n            <BottomNav />\n          )}\n          <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n              direction=\"row\"\n            >\n              <Typography variant=\"h5\">Groups</Typography>\n            </Stack>\n            <Stack sx={{ width: \"100%\" }}>\n              <Search>\n                <SearchIconWrapper>\n                  <MagnifyingGlass color=\"#709CE6\" />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Stack>\n            <Stack\n              justifyContent={\"space-between\"}\n              alignItems={\"center\"}\n              direction={\"row\"}\n            >\n              <Typography variant=\"subtitle2\" sx={{ color: \"#3263C4\" }}>\n                Create New Group\n              </Typography>\n              <IconButton onClick={handleOpenDialog}>\n                <Plus style={{ color: theme.palette.primary.main }} />\n              </IconButton>\n            </Stack>\n            <Divider />\n            <Stack\n              spacing={3}\n              sx={{ flexGrow: 1, overflowY: \"scroll\", height: \"100%\" }}\n            >\n              <Stack spacing={2.5}>\n                <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\n                  All Groups\n                </Typography>\n                {/*All Groups List */}\n                {group_conversations.map((el, idx) => (\n                  <GroupElement key={el.id} {...el} />\n                ))}\n              </Stack>\n            </Stack>\n          </Stack>\n        </Box>\n        {openDialog && (\n          <CreateGroup open={openDialog} handleClose={handleCloseDialog} />\n        )}\n        {/* Right */}\n        {chat_type === \"group\" && room_id !== null ? (\n          <GroupConversation\n            toggleContact={toggleContact}\n            toggleRoomId={toggleRoomId}\n          />\n        ) : (\n          <Stack\n            spacing={2}\n            sx={{\n              height: \"100%\",\n              width: \"100%\",\n              backgroundColor:\n                theme.palette.mode === \"light\"\n                  ? \"#f8faff\"\n                  : theme.palette.background.paper,\n            }}\n            alignItems=\"center\"\n            justifyContent={\"center\"}\n          >\n            <NoChat />\n            <Typography variant=\"subtitle2\">\n              Select a conversation or start a{\" \"}\n              <Link\n                style={{\n                  color: theme.palette.primary.main,\n                  textDecoration: \"none\",\n                }}\n                to=\"/\"\n              >\n                new one\n              </Link>\n            </Typography>\n          </Stack>\n        )}\n        {showContact &&\n          (() => {\n            switch (sidebarType) {\n              case \"CONTACT\":\n                return <Contact toggleContact={toggleContact} />;\n\n              default:\n                break;\n            }\n          })()}\n      </Stack>\n    </>\n  );\n};\n\nexport default Group;\n"],"names":["RHFTextField","name","helperText","other","control","useFormContext","render","field","fieldState","error","fullWidth","value","message","styled","theme","position","borderRadius","backgroundColor","alpha","palette","background","paper","marginRight","spacing","marginLeft","width","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","color","paddingLeft","id","title","time","msg","useTheme","dispatch","useDispatch","mode","Box","onClick","selectGroupConversation","room_id","sx","p","Stack","direction","Typography","variant","fontWeight","Transition","React","props","ref","Slide","CreateGroupForm","handleClose","socket","NewGroupSchema","Yup","shape","required","friends","min","methods","useForm","resolver","yupResolver","defaultValues","useSelector","state","app","onSubmit","data","console","log","emit","label","FormControl","InputLabel","Select","labelId","multiple","watch","onChange","e","setValue","target","renderValue","selected","map","Chip","formState","errors","friend","idx","MenuItem","firstName","lastName","Button","type","getValues","open","Dialog","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","mb","DialogContent","mt","toggleContact","toggleRoomId","current_conversations","conversation","group_chat","default","boxShadow","StyledBadge","overlap","anchorOrigin","vertical","horizontal","Avatar","alt","IconButton","Divider","orientation","flexItem","StyledInput","TextField","paddingBottom","paddingTop","Actions","icon","size","y","ChatInput","openPicker","setOpenPicker","inputRef","openActions","setOpenActions","event","placeholder","InputProps","disableUnderline","startAdornment","el","i","Tooltip","placement","Fab","top","InputAdornment","prev","endAdornment","user_id","window","localStorage","getItem","current_conversation","useState","useRef","test","setTest","group_conversations","useEffect","current","find","group_conversations_id","FetchCurrentMessages","messages","SetCurrentConversation","zIndex","bottom","right","onEmojiSelect","emoji","input","selectionStart","selectionEnd","substring","handleEmojiClick","native","primary","main","text","conversation_id","from","to","s","DocMsg","menu","incoming","MessageOption","LinkMsg","src","preview","style","maxHeight","component","Link","ReplyMsg","reply","MediaMsg","img","TextMsg","messageId","Timeline","anchorEl","setAnchorEl","setMessageDeleted","conversations","direct_chat","Boolean","undefined","currentTarget","Menu","MenuListProps","px","Message_options","option","index","cursor","stopPropagation","response","success","FetchGroupMessages","SetCurrentGroupConversation","subtype","current_messages","messageListRef","scrollTop","scrollHeight","flexGrow","overflow","isDesktop","useResponsive","chat_type","showContact","setShowContact","sidebarType","openDialog","setOpenDialog","FetchGroupConversations","overflowY","BottomNav","inputProps","makeRoomIdNull","SetRoomId","NoChat","textDecoration","Contact"],"sourceRoot":""}